public without sharing class ContactBadgesHelper {

    public static String getBadgeLabel(Contact_Badge_Definition__mdt definition, SObject obj) {
        String badgeLabel = '';
        if (definition.Badge_Label_Type__c == 'Value') {
            badgeLabel = definition.Label_Value__c;
        } else if (definition.Badge_Label_Type__c == 'Field Reference') {
            Map<String,Object> mapObjFields = obj.getPopulatedFieldsAsMap();
            badgeLabel = String.valueOf(mapObjFields.get(definition.Label_Field_Reference__c));
        }
        return badgeLabel;
    }

    public static String getBadgeColorStyle(Contact_Badge_Definition__mdt definition) {
        String hexColor = definition.Background_Color__c != null ? '#' + definition.Background_Color__c : '#D3D3D3';
        String badgeColorStyle = '--sds-c-badge-color-background:' + hexColor + ';';
        return badgeColorStyle;
    }

    public static String getBadgeLabelStyle(Contact_Badge_Definition__mdt definition) {
        String labelHexColor = definition.Label_Color__c != null ? '#' + definition.Label_Color__c : '#000000';
        String badgeLabelStyle = '--sds-c-badge-text-color:' + labelHexColor + ';';
        return badgeLabelStyle;
    }

    public static String getBadgeIconName(Contact_Badge_Definition__mdt definition) {
        String iconName = !String.isBlank(definition.Icon_Name__c) ? definition.Icon_Name__c : 'utility:alert';
        return iconName;
    }

    public static List<Contact_Badge_Definition__mdt> sortContactBadgeDefinitions(
        List<Contact_Badge_Definition__mdt> lstDefinitions
    ) {
        List<Contact_Badge_Definition__mdt> lstSortedDefinitions = new List<Contact_Badge_Definition__mdt>();
        ContactBadgeDefinitionWrapper[] lstCBDWrapper = new List<ContactBadgeDefinitionWrapper>();
        for (Contact_Badge_Definition__mdt definition : lstDefinitions) {
            lstCBDWrapper.add( new ContactBadgeDefinitionWrapper(definition) );
        }
        lstCBDWrapper.sort();
        for (ContactBadgeDefinitionWrapper cbdWrapper : lstCBDWrapper) {
            lstSortedDefinitions.add( cbdWrapper.cbd );
        }
        return lstSortedDefinitions;
    }

    public static String getQueryFromDefinition(Contact_Badge_Definition__mdt definition) {
        // SELECT
        String query = 'SELECT Id ';
        String[] lstDetailFields = new List<String>();
        if (!String.isBlank(definition.Additional_Detail_Fields__c)) {
            lstDetailFields.addAll(definition.Additional_Detail_Fields__c.replaceAll('\\s+', '').split(','));
        } else {
            lstDetailFields.add('Name');
        }
        if (!String.isBlank(definition.Label_Field_Reference__c)) {
            lstDetailFields.add(definition.Label_Field_Reference__c);
        }
        Set<String> dedupeSet = new Set<String>();
        dedupeSet.addAll(lstDetailFields);
        for (String field : dedupeSet) {
            query += ', ' + field + ' ';
        }

        // FROM
        query += 'FROM ' + definition.Object_Type__c + ' ';

        // WHERE
        query += 'WHERE ' + definition.Related_Object_ID_Path__c + ' = :';
        query += definition.Related_Object_Type__c == 'Account' ? 'accountId ' : 'recordId ';        
        if (!String.isBlank(definition.Filter_Criteria__c)) {
            query += 'AND (' + definition.Filter_Criteria__c + ') ';
        }

        // ORDER BY
        if (!String.isBlank(definition.Order_By__c)) {
            query += 'ORDER BY ' + definition.Order_By__c;
        }

        return query;
    }

    
}
